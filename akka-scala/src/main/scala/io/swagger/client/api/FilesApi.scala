/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.ByteArray
import org.joda.time.DateTime
import io.swagger.client.model.ESFile
import io.swagger.client.model.ESFileList
import io.swagger.client.model.ESPermission
import java.io.File
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object FilesApi {

  /**
   * Launch a batch which is going to search files which have been updated after a specified date. 
   * 
   * Expected answers:
   *   code 200 :  (successfully started)
   * 
   * @param id The file&#39;s ID
   * @param fromDate Return only files modified after this date
   */
  def checkUpdates(id: String, fromDate: DateTime): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/checkUpdates", "application/json")
      .withQueryParam("fromDate", fromDate)
      .withPathParam("id", id)
      .withSuccessResponse[Unit](200)
        /**
   * Copy a file of the specified file
   * 
   * Expected answers:
   *   code 201 : ESFile (Successfully created)
   * 
   * @param id The file&#39;s ID
   * @param targetId Target file&#39;s ID
   */
  def copyFile(id: String, targetId: String): ApiRequest[ESFile] =
    ApiRequest[ESFile](ApiMethods.POST, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/copy", "application/json")
      .withQueryParam("targetId", targetId)
      .withPathParam("id", id)
      .withSuccessResponse[ESFile](201)
        /**
   * Create a new File using file content and required parameters
   * 
   * Expected answers:
   *   code 200 : ESFile (If successful, this method returns the created File in the response body)
   * 
   * @param id The file&#39;s ID
   * @param content Not required in case directory creation
   * @param name if content exists, we takes file name by default
   * @param description 
   */
  def createFile(id: String, content: Option[File] = None, name: Option[String] = None, description: Option[String] = None): ApiRequest[ESFile] =
    ApiRequest[ESFile](ApiMethods.POST, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}", "multipart/form-data")
      .withFormParam("content", content)
      .withQueryParam("name", name)
      .withQueryParam("description", description)
      .withPathParam("id", id)
      .withSuccessResponse[ESFile](200)
        /**
   * Delete a File or a directory using its id
   * 
   * Expected answers:
   *   code 204 :  (Successfully deleted)
   * 
   * @param id The file&#39;s ID
   */
  def deleteFile(id: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.DELETE, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[Unit](204)
        /**
   * Get file informations
   * 
   * Expected answers:
   *   code 200 : ESFile (search results)
   * 
   * @param id The file&#39;s ID
   * @param getPermissions set true if you want to get permissions at the same you get files
   */
  def getFile(id: String, getPermissions: Option[Boolean]): ApiRequest[ESFile] =
    ApiRequest[ESFile](ApiMethods.GET, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}", "application/json")
      .withQueryParam("getPermissions", getPermissions)
      .withPathParam("id", id)
      .withSuccessResponse[ESFile](200)
        /**
   * Get the specified file&#39;s direct children
   * 
   * Expected answers:
   *   code 200 : ESFileList (search results matching criteria)
   * 
   * @param id The file&#39;s ID
   * @param getPermissions set true if you want to get permissions at the same you get files
   * @param maxResult Maximum number of files to return. Acceptable values are 0 to 1000. Use -1 for no limit
   */
  def getFileChildren(id: String, getPermissions: Option[Boolean], maxResult: Option[Int]): ApiRequest[ESFileList] =
    ApiRequest[ESFileList](ApiMethods.GET, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/children", "application/json")
      .withQueryParam("getPermissions", getPermissions)
      .withQueryParam("maxResult", maxResult)
      .withPathParam("id", id)
      .withSuccessResponse[ESFileList](200)
        /**
   * Get the specified file&#39;s content
   * 
   * Expected answers:
   *   code 200 : ByteArray (Successfully retrieved)
   * 
   * @param id The file&#39;s ID
   */
  def getFileContent(id: String): ApiRequest[ByteArray] =
    ApiRequest[ByteArray](ApiMethods.GET, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/content", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[ByteArray](200)
        /**
   * Lists a file&#39;s permissions
   * 
   * Expected answers:
   *   code 200 : Seq[ESPermission] (search results matching criteria)
   * 
   * @param id The file&#39;s ID
   */
  def getFilePermissions(id: String): ApiRequest[Seq[ESPermission]] =
    ApiRequest[Seq[ESPermission]](ApiMethods.GET, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/permissions", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[Seq[ESPermission]](200)
        /**
   * Move a file to a specified parent
   * 
   * Expected answers:
   *   code 201 : ESFile (Successfully moved)
   * 
   * @param id The file&#39;s ID
   * @param targetId Target file&#39;s ID
   */
  def moveFile(id: String, targetId: String): ApiRequest[ESFile] =
    ApiRequest[ESFile](ApiMethods.POST, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}/move", "application/json")
      .withQueryParam("targetId", targetId)
      .withPathParam("id", id)
      .withSuccessResponse[ESFile](201)
        /**
   * Updates a specified file metadata and/or content
   * 
   * Expected answers:
   *   code 200 : ESFile (If successful, this method returns the updated File in the response body)
   * 
   * @param id The file&#39;s ID
   * @param content 
   * @param description 
   */
  def updateFile(id: String, content: Option[File] = None, description: Option[String] = None): ApiRequest[ESFile] =
    ApiRequest[ESFile](ApiMethods.PUT, "https://virtserver.swaggerhub.com/EVER_TEAM_SOFTWARE/Storage/1.0.0", "/files/{id}", "multipart/form-data")
      .withFormParam("content", content)
      .withQueryParam("description", description)
      .withPathParam("id", id)
      .withSuccessResponse[ESFile](200)
      

}

